import matplotlib.pyplot as plt
import numpy

cost=[1.0144926, 0.96602422, 0.024328001, 0.084135853, 0.016160158, 0.025197307, 0.009908339, 0.01657806, 0.0081786923, 0.013121139, 0.0070881136, 0.011028621, 0.0063030426, 0.0096297041, 0.0056963619, 0.0085926503, 0.005211385, 0.0077778683, 0.0048120469, 0.0071275895, 0.0044746906, 0.006589605, 0.004183189, 0.006135819, 0.0039332267, 0.0057431147, 0.0037121987, 0.0054046381, 0.0035161029, 0.0051041786, 0.0033395544, 0.0048419037, 0.0031820005, 0.0046072733, 0.0030369759, 0.0043934993, 0.0029067376, 0.0042033275, 0.0027854857, 0.0040287729]



x = range(0,100*len(cost),100)

plt.plot(x,cost)
plt.show()


# pred=[ 0,0,1,1,0,0,1,0,0,1,0,0,0,0,0,1,0,0,
#   0,0,0,1,0,0,0,0,0,0,0,1,0,0,0,1,0,0,
#   0,1,0,0,0,0,1,0,0,0,0,0,0,0]
#
# act=[ 1,0,1,1,0,0,0,1,0,1,0,0,0,1,0,1,0,0,
#   0,0,1,1,1,1,1,0,0,0,0,0,0,1,0,1,1,0,
#   0,0,1,0,0,0,1,0,0,1,1,0,1,0]
#
# normal=0
# nodule=0
# nod_nor=0
# nor_nod=0
# for i,j in zip(pred,act):
#     if i==j and j==0:
#         normal+=1
#     elif i==j and j==1:
#         nodule+=1
#     elif i!=j and j==0:
#         nor_nod+=1
#     elif i!=j and j==1:
#         nod_nor+=1
#
# print normal
# print nodule
# print nod_nor
# print nor_nod


pred_perc = [[ 0.98667473,0.01332524],
 [ 0.37804329,0.62195677],
 [ 0.25628123,0.7437188 ],
 [ 0.30383977,0.6961602 ],
 [ 0.75620246,0.2437976 ],
 [ 0.8936432, 0.10635684],
 [ 0.28952771,0.71047229],
 [ 0.98636836,0.01363169],
 [ 0.88667697,0.11332297],
 [ 0.20244174,0.79755831],
 [ 0.98216808,0.01783191],
 [ 0.90132445,0.09867556],
 [ 0.55609512,0.44390485],
 [ 0.7679649, 0.23203513],
 [ 0.98855376,0.01144631],
 [ 0.11122131,0.88877869],
 [ 0.46338663,0.5366134 ],
 [ 0.90723628,0.09276367],
 [ 0.77705479,0.22294515],
 [ 0.94254065,0.05745932],
 [ 0.69600475,0.30399522],
 [ 0.60293436,0.39706561],
 [ 0.06954173,0.93045825],
 [ 0.00311055,0.99688941],
 [ 0.98544693,0.01455308]]
predicted =[0,1,1,1,0,0,1,0,0,1,0,0,0,0,0,1,1,0,0,0,0,0,1,1,0]
actual =[0 ,1 ,1 ,1 ,0 ,1 ,1 ,0 ,1 ,1 ,0 ,1 ,1 ,1 ,0 ,0 ,0 ,1 ,0 ,0 ,0 ,0 ,1 ,1, 0]
#
# [[ 0.37725854  0.62274146]
#  [ 0.99791104  0.00208891]
#  [ 0.70968902  0.29031098]
#  [ 0.23615305  0.76384693]
#  [ 0.48953882  0.51046121]
#  [ 0.67623889  0.32376111]
#  [ 0.88649976  0.11350021]
#  [ 0.99060351  0.00939645]
#  [ 0.98265082  0.01734922]
#  [ 0.76106918  0.23893082]
#  [ 0.13883038  0.86116958]
#  [ 0.99685919  0.00314084]
#  [ 0.9452222   0.05477774]
#  [ 0.04830367  0.95169628]
#  [ 0.02982853  0.97017145]
#  [ 0.75569326  0.24430674]
#  [ 0.00201784  0.99798214]
#  [ 0.89771366  0.10228631]
#  [ 0.45069715  0.54930282]
#  [ 0.56799167  0.43200833]
#  [ 0.31027865  0.68972141]
#  [ 0.41974404  0.58025599]
#  [ 0.97264206  0.02735789]
#  [ 0.93642086  0.0635791 ]
#  [ 0.74562198  0.25437808]]
# predicted [1 0 0 1 1 0 0 0 0 0 1 0 0 1 1 0 1 0 1 0 1 1 0 0 0]
# actual [0 1 0 0 1 1 0 0 1 0 0 0 0 1 1 0 1 0 0 0 0 0 0 0 0]

# ind = {"0":"NORMAL","1":"NODULE"}
# import numpy as np
# from math import ceil
# import matplotlib.pyplot as plt
# # plt.style.use('ggplot')
#
# # fig = plt.figure()
# PLOT_ROW_SIZE=3
# PLOT_COLUMNS_SIZE=5
# for i in range(1,16):
#
#     im = plt.imread("final_test_images_calc_nodule_only/"+str(i)+".png")
#
#     plt.subplot(PLOT_ROW_SIZE,PLOT_COLUMNS_SIZE,i)
#     plt.xticks([])
#     plt.yticks([])
#     plt.xlabel("NORMAL : "+str(round(pred_perc[i][0],3))+"| NODULE : "+str(round(pred_perc[i][1],3))+"\n TRUE : "+ ind[str(actual[i])], fontsize=12)
#     plt.imshow(im)
#
#
#
#
# # plt.tick_params(axis='both', which='both', bottom='off', top='off', labelbottom='off', right='off', left='off', labelleft='off')
# # ax.set_xticklabels([])
# # fig.subplots_adjust(bottom=0.08,left = 0.05,right=0.97,top=0.93,wspace = 0.5,hspace = 0.5)
# plt.show()
